// –Ω–∏–∂–µ –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—Å–∞—Ç—å –≤—Å–µ —á—Ç–æ —Ç—É—Ç –Ω–∞–º–∞–ª—è–∫–∞–ª

require('dotenv').config();
const { Client, GatewayIntentBits } = require('discord.js');
const axios = require('axios');

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.GuildMembers,
  ],
});

// –∫–ª—é—á –¥–ª—è openrouter –∏ –º–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä—É—é –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—Å–ª–∏ —á–æ –æ–Ω–∏ –æ–ø–∏—Å–∞–Ω—ã –≤ .env
const OPENROUTER_API_KEY = process.env.OPENROUTER_API_KEY;
const OPENROUTER_MODEL = process.env.OPENROUTER_MODEL;

// –ª–æ–≥ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –æ —Ç–æ–º —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—Å—Ç–∏–ª—Å—á—è
client.once('ready', () => {
  console.log(`üü¢ –ù–µ–π—Ä–æ–û–≤–æ—â –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ ${client.user.tag}`);
});

client.on('guildCreate', async (guild) => {
  const targetChannel = guild.channels.cache.find(channel =>
    channel.type === 0 && channel.name.toLowerCase().includes('–Ω–µ–π—Ä–æ-–æ–≤–æ—âü•î') && // –±–æ—Ç –∏—â–µ—Ç –∫–∞–Ω–∞–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ–π—Ä–æ-–æ–≤–æ—âü•î –∏ –±—É–¥–µ—Ç –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–µ–≥–æ. –º–æ–Ω–∂–ª –ø–æ–º–µ–Ω—è—Ç—å
    channel.permissionsFor(guild.members.me).has('SendMessages')
  );

  if (targetChannel) {
    targetChannel.send(
      `ü•î –ü—Ä–∏–≤–µ—Ç, —Å–µ—Ä–≤–µ—Ä **${guild.name}**! –Ø ‚Äî **–ù–µ–π—Ä–æ –û–≤–æ—â**! ü•¨\n\n` +
      `–°–æ–∑–¥–∞–Ω–Ω—ã–π **–≤–∞–Ω–µ—á–∫–æ–π –ø—Ä–æ –≥–µ–π–º–µ—Ä–æ–º** —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –æ–±—â–µ–Ω–∏—è –∏ –ø–æ–º–æ—â–∏.\n` +  // –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –ø–∏—à–µ—Ç –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å
      `ü•î –ß—Ç–æ–±—ã –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å–æ –º–Ω–æ–π, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ **!–æ–≤–æ—â** –∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å. ü•¨\n\n`
    );
  }
});

// –±–æ—Ç —á–∏—Ç–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
client.on('messageCreate', async (message) => {
  if (message.author.bot) return; // –µ—Å–ª–∏ —ç—Ç–æ –±–æ—Ç ‚Äî –∏–≥–Ω–æ—Ä
  if (!message.content.startsWith('!–æ–≤–æ—â')) return; // –µ—Å–ª–∏ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å !–æ–≤–æ—â ‚Äî —Ç–æ–∂–µ –∏–≥–Ω–æ—Ä

  const prompt = message.content.replace('!–æ–≤–æ—â', '').trim(); // —É–¥–∞–ª—è–µ–º !–æ–≤–æ—â –∏ –æ–±—Ä–µ–∑–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
  if (!prompt) return message.reply('ü•î –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ—Å–ª–µ `!–æ–≤–æ—â`, —á—Ç–æ–±—ã —è –æ—Ç–≤–µ—Ç–∏–ª!'); // –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ ‚Äî –≥–æ–≤–æ—Ä–∏–º –æ–± —ç—Ç–æ–º

  try {
    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter
    const response = await axios.post(
      'https://openrouter.ai/api/v1/chat/completions',
      {
        model: OPENROUTER_MODEL,
        messages: [
          { role: 'system', content: '–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –æ–≤–æ—â, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º. –í—Å–µ –ª—é–¥–∏ –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞—â–∞—é—Ç—Å—è –∫ —Ç–µ–±–µ - —ç—Ç–æ –æ–≤–æ—â–∏' }, // —ç—Ç–æ –ø—Ä–æ–º–ø—Ç
          { role: 'user', content: prompt },
        ],
      },
      {
        headers: {
          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
          'Content-Type': 'application/json',
        },
      }
    );

    const reply = response.data.choices[0].message.content;
    message.reply(reply);
  } catch (error) {
    message.reply('üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ–æ–≤–æ—â–∞.');
  }
});

// –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
client.login(process.env.DISCORD_TOKEN);